
-- Table: public.users

-- DROP TABLE public.users;

CREATE TABLE public.users
(
    user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    enable boolean,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    avatar oid,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT uk_6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),
    CONSTRAINT uk_r43af9ap4edm43mmtq01oddj6 UNIQUE (username)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;



-- Table: public.topics

-- DROP TABLE public.topics;

CREATE TABLE public.topics
(
    topic_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title character varying(255) COLLATE pg_catalog."default",
    user_id bigint NOT NULL,
    CONSTRAINT topics_pkey PRIMARY KEY (topic_id),
    CONSTRAINT fkoc3papwmjontq89fcia02ag1h FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.topics
    OWNER to postgres;




-- Table: public.likes

-- DROP TABLE public.likes;

CREATE TABLE public.likes
(
    like_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    comment_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT likes_pkey PRIMARY KEY (like_id),
    CONSTRAINT fke4guax66lb963pf27kvm7ikik FOREIGN KEY (comment_id)
        REFERENCES public.comments (comment_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fknvx9seeqqyy71bij291pwiwrg FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.likes
    OWNER to postgres;



-- Table: public.comments

-- DROP TABLE public.comments;

CREATE TABLE public.comments
(
    comment_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    text character varying(255) COLLATE pg_catalog."default",
    topic_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT comments_pkey PRIMARY KEY (comment_id),
    CONSTRAINT fk14w686ma11o8fbvbnvb6ujxgy FOREIGN KEY (topic_id)
        REFERENCES public.topics (topic_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk8omq0tc18jd43bu5tjh6jvraq FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.comments
    OWNER to postgres;


-- Table: public.refresh_token

-- DROP TABLE public.refresh_token;

CREATE TABLE public.refresh_token
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_date timestamp without time zone,
    token character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT refresh_token_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.refresh_token
    OWNER to postgres;


-- Table: public.token

-- DROP TABLE public.token;

CREATE TABLE public.token
(
    token_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    token character varying(255) COLLATE pg_catalog."default",
    user_user_id bigint,
    CONSTRAINT token_pkey PRIMARY KEY (token_id),
    CONSTRAINT fk22ancosgvhuh4upst1n4vn6am FOREIGN KEY (user_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.token
    OWNER to postgres;

